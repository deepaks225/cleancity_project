<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CleanCity</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
            color: #333;
        }
        header {
            background-color: #333;
            color: white;
            padding: 10px 0;
            text-align: center;
            box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
        }
        nav a {
            color: white;
            text-decoration: none;
            margin: 0 15px;
            font-size: 16px;
        }
        nav a:hover {
            text-decoration: underline;
        }
        h1 {
            margin: 0;
            font-size: 24px;
        }
        div.inline {
            display: inline-block;
            vertical-align: top;
            margin: 20px;
        }
        #video, #canvas {
            border: 2px solid #ddd;
            border-radius: 8px;
            width: 300px;
            height: 240px;
        }
        #capture {
            display: block;
            margin: 10px auto;
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        #capture:hover {
            background-color: #45a049;
        }
        form {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
            margin: 20px;
        }
        input[type="text"] {
            width: calc(100% - 40px);
            max-width: 300px;
            height: 100px;
            border-radius: 5px;
            border: 1px solid #ccc;
            margin-top: 10px;
            margin-bottom: 10px;
        }
        button[type="submit"] {
            display: block;
            width: 100%;
            max-width: 80px;
            padding: 10px;
            background-color: #45a049;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }
        button[type="submit"]:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <header>
        <h1>CleanCity</h1>
        <% if (locals.user) { %>
            <nav>
                <a href="/home">Home</a>
                <a href="/capture">Report Litter</a>
                <a href="/profile">Profile</a>
                <a href="#admin">Admin</a>
                <a href="#notifications">Notifications</a>
                <a href="#analytics">Analytics</a>
                <a href="#drives">Cleaning Drives</a>
                <a href="/logout">LogOut</a>
            </nav>
        <% } else { %>
            <nav>
                <a href="/">Home</a>
                <a href="/signin">SignIn</a>
                <a href="/signup">SignUp</a>
            </nav>
        <% } %>
    </header>

    <div class="inline">
        <video id="video" autoplay></video>
        <button id="capture">Capture</button>
    </div>
    
    <div class="inline">
        <canvas id="canvas"></canvas>
    </div>
    
    <form action="/upload" method="post" id="uploadForm" enctype="multipart/form-data">
        <input type="file" name="image" id="imageInput" style="display: none;">
        <div>
            <h2>Write your complaint</h2>
            <input type="text" name="complain" id="complain">
        </div>
        <button type="submit">Upload</button>
    </form>
    
    <script>
        const video = document.getElementById('video');
        const canvas = document.getElementById('canvas');
        const captureButton = document.getElementById('capture');
        const uploadForm = document.getElementById('uploadForm');
        const imageInput = document.getElementById('imageInput');
        const complainInput = document.getElementById('complain');

        // Detect if the device is a mobile device
        const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);

        // Set constraints for the video stream
        const constraints = {
            video: isMobile ? { facingMode: { ideal: "environment" } } : true
        };

        // Access the user's webcam or back camera
        navigator.mediaDevices.getUserMedia(constraints)
            .then(stream => {
                video.srcObject = stream;
            })
            .catch(err => {
                console.error("Error accessing camera: ", err);
            });

        // Capture the image from the video
        captureButton.addEventListener('click', () => {
            const context = canvas.getContext('2d');
            context.drawImage(video, 0, 0, canvas.width, canvas.height);
            canvas.toBlob(blob => {
                const file = new File([blob], 'capture.png', { type: 'image/png' });
                const dataTransfer = new DataTransfer();
                dataTransfer.items.add(file);
                imageInput.files = dataTransfer.files;
            }, 'image/png');
        });

        // Handle the form submission
        uploadForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData(uploadForm);
            const complainValue = complainInput.value.trim(); // Ensure complain is a string
            formData.append('complain', complainValue);

            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(async (position) => {
                    const latitude = position.coords.latitude;
                    const longitude = position.coords.longitude;
                    
                    // Append location as JSON string
                    formData.append('location', JSON.stringify([{ latitude, longitude }]));

                    try {
                        const response = await fetch('/upload', {
                            method: 'POST',
                            body: formData
                        });
                        if (response.ok) {
                            const result = await response.json();
                            alert(result.message);
                        } else {
                            alert('Upload failed');
                        }
                    } catch (error) {
                        console.log('Error uploading file:', error);
                    }
                });
            } else {
                alert("Geolocation is not supported by this browser.");
            }
        });
    </script>
</body>
</html>
